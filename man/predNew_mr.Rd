% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/predNew_mr.R
\name{predNew_mr}
\alias{predNew_mr}
\title{Prediction at new locations based on the fitting results on HDFS.}
\usage{
predNew_mr(newdata, input, output, info, model_control = spacetime.control(),
  cluster_control = mapreduce.control())
}
\arguments{
\item{newdata}{A data.frame includes all locations' longitude, latitude, and elevation,
where the prediction is to be calculated.}

\item{input}{The path of input file on HDFS. It should be by-month division with all fitting results
of original dataset}

\item{output}{The path of output on HDFS where all the intermediate outputs will be saved.}

\item{info}{The RData path on HDFS which contains all station metadata of original dataset}

\item{model_control}{Should be a list object generated from \code{spacetime.control} function.
The list including all necessary smoothing parameters of nonparametric fitting.}

\item{cluster_control}{Should be a list object generated from \code{mapreduce.control} function.
The list including all necessary Rhipe parameters and also user tunable 
MapReduce parameters.}
}
\description{
The prediction at new locations are calculated based on the fitting results
saved on HDFS based on the original dataset.
}
\examples{
    cluster_control <- mapreduce.control(libLoc=NULL, reduceTask=95, io_sort=100, slow_starts = 0.5)
    model_control <- spacetime.control(
      vari="resp", time="date", n=576, n.p=12, stat_n=7738,
      s.window="periodic", t.window = 241, degree=2, span=0.015, Edeg=2
    ) 

    new.grid <- expand.grid(
      lon = seq(-126, -67, by = 0.1),
      lat = seq(25, 49, by = 0.1)
    )
    instate <- !is.na(map.where("state", new.grid$lon, new.grid$lat))
    new.grid <- new.grid[instate, ] 

    elev.fit <- spaloess( elev ~ lon + lat,
      data = UStinfo,
      degree = 2, 
      span = 0.015,
      distance = "Latlong",
      normalize = FALSE,
      napred = FALSE,
      alltree = FALSE,
      family="symmetric", 
      control=loess.control(surface = "direct")
    )
    grid.fit <- predloess(
      object = elev.fit,
      newdata = data.frame(
        lon = new.grid$lon,
        lat = new.grid$lat
      )
    )
    new.grid$elev2 <- log2(grid.fit + 128) 

    predNew_mr(
      newdata=new.grid, input="/tmp/output_bymth", output = "/tmp", 
      info="/tmp/station_info.RData", model_control=model_control, cluster_control=cluster_control
    )
}
\author{
Xiaosu Tong
}
\seealso{
\code{\link{spacetime.control}}, \code{\link{mapreduce.control}}
}

